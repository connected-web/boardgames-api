{
  "Resources": {
    "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "MyTestStackBoardGamesAPIPrivateApiRequestAuthorizer3042B12C",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "Type": "REQUEST",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "PrivateAPIAuthorizer2400616B",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "PrivateAPIAuthorizer2400616B",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "PrivateAPIAuthorizer2400616B",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.Authorization"
      }
    },
    "BoardGamesAPIBD87F933": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Board Games API - https://github.com/connected-web/boardgames-api/",
        "Name": "Board Games API"
      }
    },
    "BoardGamesAPICloudWatchRole4BD25357": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "BoardGamesAPIAccount35CAC8B7": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "BoardGamesAPICloudWatchRole4BD25357",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "BoardGamesAPIBD87F933"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "BoardGamesAPIDeploymentCF2289E8fbd0c921abf818503a484256282ec44b": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "Description": "Board Games API - https://github.com/connected-web/boardgames-api/"
      },
      "DependsOn": [
        "BasicArray9BB70429",
        "BasicObject9C56B0F9",
        "BasicStringArray0EB573AE",
        "BoardGamesAPIhellonameGET9F9401AA",
        "BoardGamesAPIhellonameOPTIONS315E18E9",
        "BoardGamesAPIhelloname876A42C5",
        "BoardGamesAPIhelloOPTIONS3593BB68",
        "BoardGamesAPIhello5BCA6709",
        "BoardGamesAPIopenapiGET12336D98",
        "BoardGamesAPIopenapiOPTIONSC45BC1CB",
        "BoardGamesAPIopenapiB261D55F",
        "BoardGamesAPIOPTIONS81C311BD",
        "BoardGamesAPIplayrecordscreateGETFA2F1C0C",
        "BoardGamesAPIplayrecordscreateOPTIONS8170720E",
        "BoardGamesAPIplayrecordscreate346E2417",
        "BoardGamesAPIplayrecordsdeleteGET7251663F",
        "BoardGamesAPIplayrecordsdeleteOPTIONSFFA6A4EC",
        "BoardGamesAPIplayrecordsdeleteDC3CD7B4",
        "BoardGamesAPIplayrecordslistGET8CB8A37D",
        "BoardGamesAPIplayrecordslistOPTIONSDD8211A4",
        "BoardGamesAPIplayrecordslistFE9A465B",
        "BoardGamesAPIplayrecordsOPTIONS059E95D5",
        "BoardGamesAPIplayrecords1B851AE4",
        "BoardGamesAPIstatusGET799E8117",
        "BoardGamesAPIstatusOPTIONS030FBF19",
        "BoardGamesAPIstatus10B32DBB",
        "MessageResponseFB81541E"
      ]
    },
    "BoardGamesAPIDeploymentStagev13C85ECE1": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "DeploymentId": {
          "Ref": "BoardGamesAPIDeploymentCF2289E8fbd0c921abf818503a484256282ec44b"
        },
        "StageName": "v1"
      },
      "DependsOn": [
        "BoardGamesAPIAccount35CAC8B7"
      ]
    },
    "BoardGamesAPIOPTIONS81C311BD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "BoardGamesAPIBD87F933",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIstatus10B32DBB": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "BoardGamesAPIBD87F933",
            "RootResourceId"
          ]
        },
        "PathPart": "status",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIstatusOPTIONS030FBF19": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIstatus10B32DBB"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIstatusGETApiPermissionMyTestStackBoardGamesAPI73545F1BGETstatusA5173854": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetStatus0D2B2FE7",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/status"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIstatusGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGETstatusC2A261CE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetStatus0D2B2FE7",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/status"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIstatusGET799E8117": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIstatus10B32DBB"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetStatus0D2B2FE7",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "BasicObject9C56B0F9"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "getStatus"
      }
    },
    "BoardGamesAPIopenapiB261D55F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "BoardGamesAPIBD87F933",
            "RootResourceId"
          ]
        },
        "PathPart": "openapi",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIopenapiOPTIONSC45BC1CB": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIopenapiB261D55F"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIopenapiGETApiPermissionMyTestStackBoardGamesAPI73545F1BGETopenapi48829C3C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetOpenAPISpecDAC34504",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/openapi"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIopenapiGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGETopenapi4C8E1A9C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetOpenAPISpecDAC34504",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/openapi"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIopenapiGET12336D98": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIopenapiB261D55F"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetOpenAPISpecDAC34504",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "BasicObject9C56B0F9"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "getOpenAPISpec"
      }
    },
    "BoardGamesAPIhello5BCA6709": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "BoardGamesAPIBD87F933",
            "RootResourceId"
          ]
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIhelloOPTIONS3593BB68": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIhello5BCA6709"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIhelloname876A42C5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "BoardGamesAPIhello5BCA6709"
        },
        "PathPart": "{name}",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIhellonameOPTIONS315E18E9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIhelloname876A42C5"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIhellonameGETApiPermissionMyTestStackBoardGamesAPI73545F1BGEThelloname15D40E6C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloWorld7964D1E8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/hello/*"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIhellonameGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGEThellonameF9CE73C8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloWorld7964D1E8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/hello/*"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIhellonameGET9F9401AA": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIhelloname876A42C5"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloWorld7964D1E8",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "MessageResponseFB81541E"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "helloWorld"
      }
    },
    "BoardGamesAPIplayrecords1B851AE4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "BoardGamesAPIBD87F933",
            "RootResourceId"
          ]
        },
        "PathPart": "playrecords",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIplayrecordsOPTIONS059E95D5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecords1B851AE4"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIplayrecordslistFE9A465B": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "BoardGamesAPIplayrecords1B851AE4"
        },
        "PathPart": "list",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIplayrecordslistOPTIONSDD8211A4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordslistFE9A465B"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIplayrecordslistGETApiPermissionMyTestStackBoardGamesAPI73545F1BGETplayrecordslistBB7E7C77": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ListPlayRecords521D8F0C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/playrecords/list"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordslistGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGETplayrecordslist01AE3E83": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ListPlayRecords521D8F0C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/playrecords/list"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordslistGET8CB8A37D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordslistFE9A465B"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListPlayRecords521D8F0C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "BasicArray9BB70429"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "listPlayRecords"
      }
    },
    "BoardGamesAPIplayrecordscreate346E2417": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "BoardGamesAPIplayrecords1B851AE4"
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIplayrecordscreateOPTIONS8170720E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordscreate346E2417"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIplayrecordscreateGETApiPermissionMyTestStackBoardGamesAPI73545F1BGETplayrecordscreate783123A2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreatePlayRecord9C20D2DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/playrecords/create"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordscreateGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGETplayrecordscreate556549F0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreatePlayRecord9C20D2DE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/playrecords/create"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordscreateGETFA2F1C0C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordscreate346E2417"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreatePlayRecord9C20D2DE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "BasicObject9C56B0F9"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "createPlayRecord"
      }
    },
    "BoardGamesAPIplayrecordsdeleteDC3CD7B4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "BoardGamesAPIplayrecords1B851AE4"
        },
        "PathPart": "delete",
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        }
      }
    },
    "BoardGamesAPIplayrecordsdeleteOPTIONSFFA6A4EC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordsdeleteDC3CD7B4"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,content-type'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      }
    },
    "BoardGamesAPIplayrecordsdeleteGETApiPermissionMyTestStackBoardGamesAPI73545F1BGETplayrecordsdelete3268D95B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeletePlayRecord899EA4D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/",
              {
                "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
              },
              "/GET/playrecords/delete"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordsdeleteGETApiPermissionTestMyTestStackBoardGamesAPI73545F1BGETplayrecordsdelete2525DBA6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeletePlayRecord899EA4D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/test-invoke-stage/GET/playrecords/delete"
            ]
          ]
        }
      }
    },
    "BoardGamesAPIplayrecordsdeleteGET7251663F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "BoardGamesAPIplayrecordsdeleteDC3CD7B4"
        },
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "BoardGamesAPIApiExecutionRole53A9F419",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeletePlayRecord899EA4D4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "BasicObject9C56B0F9"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "deletePlayRecord"
      }
    },
    "BoardGamesAPIApiExecutionRole53A9F419": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "BoardGamesAPIApiExecutionRoleDefaultPolicyEE753B39": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GetStatus0D2B2FE7",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GetOpenAPISpecDAC34504",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "HelloWorld7964D1E8",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ListPlayRecords521D8F0C",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CreatePlayRecord9C20D2DE",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DeletePlayRecord899EA4D4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BoardGamesAPIApiExecutionRoleDefaultPolicyEE753B39",
        "Roles": [
          {
            "Ref": "BoardGamesAPIApiExecutionRole53A9F419"
          }
        ]
      }
    },
    "PrivateAPIAuthorizerServiceRoleEBFD5560": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "PrivateAPIAuthorizer2400616B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "79fd685445da0d8ee84ec68df9c0ae6941364ae6effcbda9f6f817473e95c1d5.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "PrivateAPIAuthorizerServiceRoleEBFD5560",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "PrivateAPIAuthorizerServiceRoleEBFD5560"
      ]
    },
    "PrivateAPIAuthorizerMyTestStackBoardGamesAPIPrivateApiRequestAuthorizer3042B12CPermissions67EBC74D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PrivateAPIAuthorizer2400616B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-2:1234567890:",
              {
                "Ref": "BoardGamesAPIBD87F933"
              },
              "/authorizers/",
              {
                "Ref": "BoardGamesAPIPrivateApiRequestAuthorizer2AF0CB36"
              }
            ]
          ]
        }
      }
    },
    "PlayRecordsBucket747A7EDE": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "unit-test-bucket-name-for-playrecords"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "BasicObject9C56B0F9": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "ContentType": "application/json",
        "Name": "BasicObjectModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Basic Object",
          "description": "A basic JSON object with key value pairs",
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      }
    },
    "BasicArray9BB70429": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "ContentType": "application/json",
        "Name": "BasicArrayModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Basic Array of Objects",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {},
            "additionalProperties": true
          }
        }
      }
    },
    "BasicStringArray0EB573AE": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "ContentType": "application/json",
        "Name": "BasicStringArrayModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Basic Array of Strings",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MessageResponseFB81541E": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "BoardGamesAPIBD87F933"
        },
        "ContentType": "application/json",
        "Name": "MessageResponseModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Message",
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "The message returned by the server"
            }
          },
          "required": [
            "message"
          ]
        }
      }
    },
    "GetStatusServiceRoleF4D04B56": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "GetStatus0D2B2FE7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "e94e1817bf8b5d9c2a707538f4c7af7bf8efd26465d87175d8f758ee55eba0dd.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "GetStatusServiceRoleF4D04B56",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "STATUS_INFO": "{\"deploymentTime\":\"2023-07-21T22:47:30.188Z\"}",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "GetStatusServiceRoleF4D04B56"
      ]
    },
    "GetOpenAPISpecServiceRole54DBDA31": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "GetOpenAPISpecServiceRoleDefaultPolicy5E77468C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "apigateway:GET",
              "Effect": "Allow",
              "Resource": "arn:aws:apigateway:*::/restapis/*/stages/*/exports/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "GetOpenAPISpecServiceRoleDefaultPolicy5E77468C",
        "Roles": [
          {
            "Ref": "GetOpenAPISpecServiceRole54DBDA31"
          }
        ]
      }
    },
    "GetOpenAPISpecDAC34504": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "15a22968422880674dbfe8fcc8c7f1f4b3219d4de7cdf17603c11ae44a5d2455.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "GetOpenAPISpecServiceRole54DBDA31",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "GetOpenAPISpecServiceRoleDefaultPolicy5E77468C",
        "GetOpenAPISpecServiceRole54DBDA31"
      ]
    },
    "HelloWorldServiceRoleF3F7D8B0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "HelloWorld7964D1E8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "934af710f73f0d1500d32347cab45ac995720c6e39d1420ec670c79543726a38.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "HelloWorldServiceRoleF3F7D8B0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "MESSAGE_TEMPLATE": "Hi {{ name }}, have a {{ weather }} day~ ☀️⛅☁️🌧️⛈️🌩️!",
            "EXAMPLE_ENV": "{\"weather\":\"sunny\"}",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "HelloWorldServiceRoleF3F7D8B0"
      ]
    },
    "ListPlayRecordsServiceRole76DC840D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "ListPlayRecordsServiceRoleDefaultPolicy57F09A0C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PlayRecordsBucket747A7EDE",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PlayRecordsBucket747A7EDE",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ListPlayRecordsServiceRoleDefaultPolicy57F09A0C",
        "Roles": [
          {
            "Ref": "ListPlayRecordsServiceRole76DC840D"
          }
        ]
      }
    },
    "ListPlayRecords521D8F0C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "ee611936bd6ffc423ee1e00150b4b656afb0db0b9cb998653f17108708965a07.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "ListPlayRecordsServiceRole76DC840D",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": "unit-test-bucket-name-for-playrecords",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "ListPlayRecordsServiceRoleDefaultPolicy57F09A0C",
        "ListPlayRecordsServiceRole76DC840D"
      ]
    },
    "CreatePlayRecordServiceRole2E98C8E0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "CreatePlayRecordServiceRoleDefaultPolicy5E646776": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PlayRecordsBucket747A7EDE",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PlayRecordsBucket747A7EDE",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CreatePlayRecordServiceRoleDefaultPolicy5E646776",
        "Roles": [
          {
            "Ref": "CreatePlayRecordServiceRole2E98C8E0"
          }
        ]
      }
    },
    "CreatePlayRecord9C20D2DE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "26d140c4918a674e4ead8ba49f1f714c35eead78d67f4783d419430e19b6449a.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CreatePlayRecordServiceRole2E98C8E0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": "unit-test-bucket-name-for-playrecords",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "CreatePlayRecordServiceRoleDefaultPolicy5E646776",
        "CreatePlayRecordServiceRole2E98C8E0"
      ]
    },
    "DeletePlayRecordServiceRole6BD926B3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "DeletePlayRecordServiceRoleDefaultPolicyE5162683": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PlayRecordsBucket747A7EDE",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PlayRecordsBucket747A7EDE",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeletePlayRecordServiceRoleDefaultPolicyE5162683",
        "Roles": [
          {
            "Ref": "DeletePlayRecordServiceRole6BD926B3"
          }
        ]
      }
    },
    "DeletePlayRecord899EA4D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-1234567890-eu-west-2",
          "S3Key": "b21d9cf7df09d14849ce774a49dd799cdb644a8a47d3ce791fe5cf37bf5c0495.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "DeletePlayRecordServiceRole6BD926B3",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DATA_BUCKET_NAME": "unit-test-bucket-name-for-playrecords",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "DeletePlayRecordServiceRoleDefaultPolicyE5162683",
        "DeletePlayRecordServiceRole6BD926B3"
      ]
    }
  },
  "Outputs": {
    "BoardGamesAPIEndpoint21DF4E61": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "BoardGamesAPIBD87F933"
            },
            ".execute-api.eu-west-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "BoardGamesAPIDeploymentStagev13C85ECE1"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}